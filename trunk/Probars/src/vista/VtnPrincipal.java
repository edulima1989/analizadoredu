/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 12/11/2010, 12:40:25 AM
 */

package vista;

import java.awt.Color;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import modelo.*;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author edu
 *
 * Integrantes:
 *              EduardoLuis Lima Galarza
 *              Angel Alberto Valdez Masache
 *              Carlos Fabian Vivanco Tenorio
 *
 */
public class VtnPrincipal extends javax.swing.JFrame {
   
    /** Creates new form MainFrame */
    public VtnPrincipal() {
        initComponents();
        documentoInicial=txtEntrada.getText();
      
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        analizadorLexico = new modelo.AnalizadorLexico();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtEntrada = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtEntrada.setPreferredSize(new java.awt.Dimension(10, 100));
        txtEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEntradaMouseClicked(evt);
            }
        });
        txtEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEntradaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEntradaKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(txtEntrada);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TOKEN", "LEXEMA"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONOS/NUEVO.jpg"))); // NOI18N
        jButton2.setToolTipText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONOS/icono_guardar.gif"))); // NOI18N
        jButton3.setToolTipText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONOS/images.jpg"))); // NOI18N
        jButton5.setToolTipText("Vista Previa");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONOS/abrir-carpeta-amarilla-icono-6565-96.png"))); // NOI18N
        jButton1.setToolTipText("Abrir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONOS/salir.jpg"))); // NOI18N
        jButton4.setToolTipText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONOS/images (2).jpg"))); // NOI18N
        jButton6.setToolTipText("Vista Previa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(2, 2, 2)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton2, 0, 0, Short.MAX_VALUE)
                    .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("ARCHIVO");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Guardar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Imprimir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Nuevo");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem10.setText("Compilar");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem5.setText("Salir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("VER");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Vista Previa");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("FORMATO");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Copiar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Pegar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Cortar");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 396, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 421, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 582, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(273, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            abrir();
        } catch (BadLocationException ex) {
            Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            abrir();
        } catch (BadLocationException ex) {
            Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            guardar();
        } catch (IOException ex) {
            Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void txtEntradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyReleased

        marcar();
    }//GEN-LAST:event_txtEntradaKeyReleased

    private void txtEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyPressed

}//GEN-LAST:event_txtEntradaKeyPressed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        VtnVistaPrevia vtn=new VtnVistaPrevia(this, true,txtEntrada.getText());
        vtn.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
       cerrar();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
            cerrar();
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        nuevo();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        nuevo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            guardar();
        } catch (IOException ex) {
            Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    cerrar();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        VtnVistaPrevia vtn=new VtnVistaPrevia(this, true,txtEntrada.getText());
                vtn.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEntradaMouseClicked
  
    }//GEN-LAST:event_txtEntradaMouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
            txtEntrada.copy();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        txtEntrada.paste();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        txtEntrada.cut();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            txtEntrada.print();
        } catch (PrinterException ex) {
            Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
    compilar();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    compilar();
    }//GEN-LAST:event_jButton6ActionPerformed

private void compilar(){
        analizadorLexico.crearTokens(txtEntrada.getText());
        AnalizadorSintactico analisadorSintactico=new AnalizadorSintactico(analizadorLexico.getLexicos());
        if(analisadorSintactico.comprobarSintaxis())
            JOptionPane.showMessageDialog(this, "Correcto");
        else
            JOptionPane.showMessageDialog(this, "Error de Sintaxis");
}

private void cerrar(){
        if(!documentoInicial.equals(txtEntrada.getText())){
                int opc=JOptionPane.showConfirmDialog(this,"Se ha producido cambios en el documento desea guardarlos" , "Confirmaci√≥n - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.",JOptionPane.YES_NO_CANCEL_OPTION);
                switch(opc){
                    case 0:try {
                                guardar();
                                dispose();
                            } catch (IOException ex) {
                                Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                    break;
                    case 1:
                        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                        dispose();
                    break;
                    case 2:
                    setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                        break;
                        default:
                }
            }else{
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            dispose();
            }
}
    public void marcar(){
    int indice = 0;
        analizadorLexico.crearTokens(txtEntrada.getText());
        List<Lexico> lista =analizadorLexico.getLexicos();
        Object datos [][] = new Object[lista.size()][2];
        for (int i = 0; i < datos.length; i++) {
            datos[i][0]=lista.get(i).getToken();
            datos[i][1]=lista.get(i).getLexema();
        }
        tabla.setModel(new DefaultTableModel(
            datos,
            new String [] {
                "Tokens", "Lexema"
            }
        ));

//    Style estiloRojo,estiloAzul,estiloVerde;
//    StyleContext sc = new StyleContext();
//
//    estiloRojo = sc.addStyle( null,null );
//    StyleConstants.setForeground( estiloRojo,Color.red );
//
//    estiloVerde = sc.addStyle( null,null );
//    StyleConstants.setForeground( estiloVerde,Color.green );
//    StyleConstants.setFontSize( estiloVerde,24 );
//
//    estiloAzul = sc.addStyle( null,null );
//    StyleConstants.setForeground( estiloAzul,Color.blue );

        
        MutableAttributeSet attributes = new SimpleAttributeSet();
        String text = txtEntrada.getText();
        String palabras = "";
        StringTokenizer st = new StringTokenizer(text);
        
        while (st.hasMoreTokens()) {
        palabras = st.nextToken();
        Lexico lex=new Lexico(AFD.validaToken(palabras), palabras);
        if (lex.getToken().equals(AFD.TOKEN.TOKEN_RESERVADA)) {
            StyleConstants.setForeground(attributes, Color.blue);
            StyleConstants.setBold(attributes, true);           
                StyleConstants.setItalic(attributes, true);

        } else
            if (lex.getToken().equals(AFD.TOKEN.TOKEN_OPERADOR)) {
                StyleConstants.setForeground(attributes, Color.GREEN);
                StyleConstants.setBold(attributes, true);
                               StyleConstants.setItalic(attributes, false);
            }else
                if (lex.getToken().equals(AFD.TOKEN.TOKEN_NUMERO)) {
                    StyleConstants.setForeground(attributes, Color.BLACK);
                    StyleConstants.setBold(attributes, true);
                StyleConstants.setItalic(attributes, false);
                }else
                    if (lex.getToken().equals(AFD.TOKEN.TOKEN_ERROR)) {
                        StyleConstants.setForeground(attributes, Color.RED);
                        StyleConstants.setBold(attributes, true);
                                       StyleConstants.setItalic(attributes, false);
//                        Toolkit.getDefaultToolkit().beep();
                    }else
                        if (lex.getToken().equals(AFD.TOKEN.TOKEN_IDENTIFICADOR)) {
                            StyleConstants.setForeground(attributes, Color.black);
                            StyleConstants.setBold(attributes, false);
                                           StyleConstants.setItalic(attributes, false);
                        }else
                            if (lex.getToken().equals(AFD.TOKEN.TOKEN_SEPARADOR_SENTENCIA)) {
                                StyleConstants.setForeground(attributes, Color.orange);
                                StyleConstants.setBold(attributes, false);
                                StyleConstants.setItalic(attributes, false);
                            }else{
                                StyleConstants.setForeground(attributes, Color.black);
                                StyleConstants.setBold(attributes, false);
                                               StyleConstants.setItalic(attributes, false);

                            }
        int n=0;
        for(int i=0;i<text.indexOf(palabras,indice);i++){
            Character c=text.charAt(i);
            if(c.equals('\n'))
                n++;
        }

        
        txtEntrada.getStyledDocument().setCharacterAttributes(text.indexOf(palabras,indice)-n, palabras.length(), attributes, true);
        indice=text.indexOf(palabras,indice)+palabras.length();

        }














//    for(Lexico lex:lista){
//        if(lex.getToken().equals(AFD.TOKEN.TOKEN_RESERVADA)){
//            jTextPane1.setCharacterAttributes( estiloAzul,false );
////            Document doc=jTextPane1.getDocument();
////            doc.insertString(1,"edu", estiloAzul);
////            jTextPane1.setDocument(doc);
//
//
//            jTextPane1.getStyledDocument().insertString(
//            jTextPane1.getStyledDocument().getLength(), "Negrita",estiloAzul);
//        }
//
//    }
//
//




    }
 
    public void marcarAbrir(){
    int indice = 0;
        analizadorLexico.crearTokens(txtEntrada.getText());
        List<Lexico> lista =analizadorLexico.getLexicos();
        Object datos [][] = new Object[lista.size()][2];
        for (int i = 0; i < datos.length; i++) {
            datos[i][0]=lista.get(i).getToken();
            datos[i][1]=lista.get(i).getLexema();
        }
        tabla.setModel(new DefaultTableModel(
            datos,
            new String [] {
                "Tokens", "Lexema"
            }
        ));

        MutableAttributeSet attributes = new SimpleAttributeSet();
        String text = txtEntrada.getText();
        String palabras = "";
        StringTokenizer st = new StringTokenizer(text);

        while (st.hasMoreTokens()) {
            palabras = st.nextToken();
        Lexico lex=new Lexico(AFD.validaToken(palabras), palabras);
        if (lex.getToken().equals(AFD.TOKEN.TOKEN_RESERVADA)) {
            StyleConstants.setForeground(attributes, Color.blue);
            StyleConstants.setBold(attributes, true);
                StyleConstants.setItalic(attributes, true);

        } else
            if (lex.getToken().equals(AFD.TOKEN.TOKEN_OPERADOR)) {
                StyleConstants.setForeground(attributes, Color.GREEN);
                StyleConstants.setBold(attributes, true);
                               StyleConstants.setItalic(attributes, false);
            }else
                if (lex.getToken().equals(AFD.TOKEN.TOKEN_NUMERO)) {
                    StyleConstants.setForeground(attributes, Color.BLACK);
                    StyleConstants.setBold(attributes, true);
                StyleConstants.setItalic(attributes, false);
                }else
                    if (lex.getToken().equals(AFD.TOKEN.TOKEN_ERROR)) {
                        StyleConstants.setForeground(attributes, Color.RED);
                        StyleConstants.setBold(attributes, true);
                                       StyleConstants.setItalic(attributes, false);
//                        Toolkit.getDefaultToolkit().beep();
                    }else
                        if (lex.getToken().equals(AFD.TOKEN.TOKEN_IDENTIFICADOR)) {
                            StyleConstants.setForeground(attributes, Color.black);
                            StyleConstants.setBold(attributes, false);
                                           StyleConstants.setItalic(attributes, false);
                        }else
                            if (lex.getToken().equals(AFD.TOKEN.TOKEN_SEPARADOR_SENTENCIA)) {
                                StyleConstants.setForeground(attributes, Color.orange);
                                StyleConstants.setBold(attributes, false);
                                StyleConstants.setItalic(attributes, false);
                            }else{
                                StyleConstants.setForeground(attributes, Color.black);
                                StyleConstants.setBold(attributes, false);
                                               StyleConstants.setItalic(attributes, false);

                            }

        txtEntrada.getStyledDocument().setCharacterAttributes(text.indexOf(palabras,indice), palabras.length(), attributes, true);
        indice=text.indexOf(palabras,indice)+palabras.length();

        }














//    for(Lexico lex:lista){
//        if(lex.getToken().equals(AFD.TOKEN.TOKEN_RESERVADA)){
//            jTextPane1.setCharacterAttributes( estiloAzul,false );
////            Document doc=jTextPane1.getDocument();
////            doc.insertString(1,"edu", estiloAzul);
////            jTextPane1.setDocument(doc);
//
//
//            jTextPane1.getStyledDocument().insertString(
//            jTextPane1.getStyledDocument().getLength(), "Negrita",estiloAzul);
//        }
//
//    }
//
//




    }
    private void guardar() throws IOException{
        fc=new JFileChooser();
        Filtro filtro =new Filtro();
        fc.setVisible(true);
        fc.addChoosableFileFilter(filtro);

         int opc=fc.showSaveDialog(null);
         if(opc==JFileChooser.APPROVE_OPTION){
                String path = fc.getSelectedFile().toString();
                System.out.println(path);

                FileWriter fr=null;
                BufferedWriter br;
                File f=new File(path+".cmp");
                fr=new FileWriter(f);
                br=new BufferedWriter(fr);
                br.write(txtEntrada.getText());
                documentoInicial=txtEntrada.getText();
                          this.setTitle(f.getName().substring(0,f.getName().length() - 4)+ " - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.");
                br.close();
         }

    }

    private void nuevo(){
        
        if(!documentoInicial.equals(txtEntrada.getText())){
                int opc=JOptionPane.showConfirmDialog(this,"Se ha producido cambios en el documento\n" +
                        " desea guardarlos efectuados antes de continuar" , "Confirmaci√≥n - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.",JOptionPane.YES_NO_CANCEL_OPTION);
                System.out.println(opc);
                switch(opc){
                    case 0:try {
                                guardar();
                                txtEntrada.setText("");
                                marcar();
                                this.setTitle("Nuevo Documento - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.");
                                documentoInicial=txtEntrada.getText();
                            } catch (IOException ex) {
                                Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                    break;
                    case 1:
                            txtEntrada.setText("");
                            marcar();
                            this.setTitle("Nuevo Documento - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.");
                            documentoInicial=txtEntrada.getText();
                    break;
                    case 2:

                        break;
                        default:
                }
            }else{
            txtEntrada.setText("");
            marcar();
            this.setTitle("Nuevo Documento - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.");
            documentoInicial=txtEntrada.getText();
            }
        
    }

    private void abrir() throws BadLocationException{

        fc=new JFileChooser();
        Filtro filtro =new Filtro();
        fc.setVisible(true);

        fc.addChoosableFileFilter(filtro);

        int opcion=fc.showOpenDialog(this);
        if(opcion==javax.swing.JFileChooser.APPROVE_OPTION){
         java.io.File archivo=fc.getSelectedFile();
         FileReader fr=null;
         BufferedReader br;
            try {
                fr = new FileReader(archivo);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
          br=new BufferedReader(fr);

            String str="",todo="";

        try{
        str=br.readLine();
        todo=str;
             while(!str.equals(null)){
                 str=br.readLine();
                 if(!str.equals(null))
                     todo+="\n"+str;

             }
        }catch(Exception ex){

        }
            try {
                br.close();
            } catch (IOException ex) {
                Logger.getLogger(VtnPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtEntrada.setText(todo);
            marcarAbrir();
            this.setTitle(archivo.getName().substring(0,archivo.getName().length() - 4)+ " - ANALIZADOR LEXICO Versi√≥n 1.2 - BUENAZOS.");
            documentoInicial=txtEntrada.getText();
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private modelo.AnalizadorLexico analizadorLexico;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabla;
    private javax.swing.JTextPane txtEntrada;
    // End of variables declaration//GEN-END:variables
    private JFileChooser fc=new JFileChooser();
    private String documentoInicial;


   

}
